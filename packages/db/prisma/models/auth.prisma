model User {
  id            String  @id
  name          String
  email         String
  emailVerified Boolean @default(false)
  image         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
  accounts Account[]

  @@unique([email])
  @@map("user")
  @@schema("auth")
}

model Session {
  id String @id

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  token     String
  expiresAt DateTime
  ipAddress String?
  userAgent String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([token])
  @@map("session")
  @@schema("auth")
}

model Account {
  id String @id

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("account")
  @@schema("auth")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("verification")
  @@schema("auth")
}
